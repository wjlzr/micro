// Code generated by goctl. DO NOT EDIT!
// Source: oauth.proto

//go:generate mockgen -destination ./oauth_mock.go -package oauthclient -source $GOFILE

package oauthclient

import (
	"context"

	"micro/rpc/svs/oauth/oauth"

	"github.com/tal-tech/go-zero/zrpc"
)

type (
	LoginReq  = oauth.LoginReq
	LoginResp = oauth.LoginResp

	Oauth interface {
		//  Login 登录
		Login(ctx context.Context, in *LoginReq) (*LoginResp, error)
	}

	defaultOauth struct {
		cli zrpc.Client
	}
)

func NewOauth(cli zrpc.Client) Oauth {
	return &defaultOauth{
		cli: cli,
	}
}

//  Login 登录
func (m *defaultOauth) Login(ctx context.Context, in *LoginReq) (*LoginResp, error) {
	client := oauth.NewOauthClient(m.cli.Conn())
	return client.Login(ctx, in)
}
