// Code generated by goctl. DO NOT EDIT!
// Source: pay.proto

package server

import (
	"context"

	"micro/rpc/svs/pay/internal/logic"
	"micro/rpc/svs/pay/internal/svc"
	"micro/rpc/svs/pay/pay"
)

type PayServer struct {
	svcCtx *svc.ServiceContext
}

func NewPayServer(svcCtx *svc.ServiceContext) *PayServer {
	return &PayServer{
		svcCtx: svcCtx,
	}
}

func (s *PayServer) AppUnifiedOrder(ctx context.Context, in *pay.UnifiedOrderReq) (*pay.UnifiedOrderResp, error) {
	l := logic.NewAppUnifiedOrderLogic(ctx, s.svcCtx)
	return l.AppUnifiedOrder(in)
}

func (s *PayServer) H5UnifiedOrder(ctx context.Context, in *pay.UnifiedOrderReq) (*pay.H5UnifiedOrderResp, error) {
	l := logic.NewH5UnifiedOrderLogic(ctx, s.svcCtx)
	return l.H5UnifiedOrder(in)
}

func (s *PayServer) JsUnifiedOrder(ctx context.Context, in *pay.UnifiedOrderReq) (*pay.UnifiedOrderResp, error) {
	l := logic.NewJsUnifiedOrderLogic(ctx, s.svcCtx)
	return l.JsUnifiedOrder(in)
}

func (s *PayServer) OrderQuery(ctx context.Context, in *pay.OrderQueryReq) (*pay.OrderQueryResp, error) {
	l := logic.NewOrderQueryLogic(ctx, s.svcCtx)
	return l.OrderQuery(in)
}
