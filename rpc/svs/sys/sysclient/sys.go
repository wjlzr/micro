// Code generated by goctl. DO NOT EDIT!
// Source: sys.proto

//go:generate mockgen -destination ./sys_mock.go -package sysclient -source $GOFILE

package sysclient

import (
	"context"

	"micro/rpc/svs/sys/sys"

	"github.com/tal-tech/go-zero/zrpc"
)

type (
	RoleUpdateReq         = sys.RoleUpdateReq
	RoleDeleteResp        = sys.RoleDeleteResp
	MenuListTree          = sys.MenuListTree
	SysLogDeleteReq       = sys.SysLogDeleteReq
	ConfigListReq         = sys.ConfigListReq
	ConfigListResp        = sys.ConfigListResp
	JobListReq            = sys.JobListReq
	UserAddReq            = sys.UserAddReq
	UserListReq           = sys.UserListReq
	MenuAddReq            = sys.MenuAddReq
	MenuAddResp           = sys.MenuAddResp
	UpdateMenuRoleResp    = sys.UpdateMenuRoleResp
	DeptDeleteReq         = sys.DeptDeleteReq
	LoginLogDeleteResp    = sys.LoginLogDeleteResp
	UserUpdateResp        = sys.UserUpdateResp
	QueryMenuByRoleIdResp = sys.QueryMenuByRoleIdResp
	DictDeleteResp        = sys.DictDeleteResp
	SysLogListResp        = sys.SysLogListResp
	ConfigUpdateResp      = sys.ConfigUpdateResp
	JobListData           = sys.JobListData
	LoginLogAddReq        = sys.LoginLogAddReq
	UserListData          = sys.UserListData
	RoleListResp          = sys.RoleListResp
	UpdateRoleRoleReq     = sys.UpdateRoleRoleReq
	MenuListData          = sys.MenuListData
	MenuDeleteReq         = sys.MenuDeleteReq
	DictListReq           = sys.DictListReq
	DeptAddReq            = sys.DeptAddReq
	LoginReq              = sys.LoginReq
	UserDeleteReq         = sys.UserDeleteReq
	LoginLogDeleteReq     = sys.LoginLogDeleteReq
	RoleUpdateResp        = sys.RoleUpdateResp
	DictUpdateReq         = sys.DictUpdateReq
	LoginLogListData      = sys.LoginLogListData
	RoleListReq           = sys.RoleListReq
	DeptListResp          = sys.DeptListResp
	DeptUpdateResp        = sys.DeptUpdateResp
	LoginLogListReq       = sys.LoginLogListReq
	InfoReq               = sys.InfoReq
	ReSetPasswordResp     = sys.ReSetPasswordResp
	UserStatusResp        = sys.UserStatusResp
	RoleListData          = sys.RoleListData
	DeptDeleteResp        = sys.DeptDeleteResp
	SysLogAddReq          = sys.SysLogAddReq
	UserListResp          = sys.UserListResp
	RoleDeleteReq         = sys.RoleDeleteReq
	QueryMenuByRoleIdReq  = sys.QueryMenuByRoleIdReq
	UserAddResp           = sys.UserAddResp
	DictUpdateResp        = sys.DictUpdateResp
	DeptListData          = sys.DeptListData
	LoginLogAddResp       = sys.LoginLogAddResp
	UpdateConfigRoleReq   = sys.UpdateConfigRoleReq
	JobAddResp            = sys.JobAddResp
	JobUpdateResp         = sys.JobUpdateResp
	InfoResp              = sys.InfoResp
	MenuListReq           = sys.MenuListReq
	UserStatusReq         = sys.UserStatusReq
	MenuUpdateReq         = sys.MenuUpdateReq
	DeptListReq           = sys.DeptListReq
	SysLogAddResp         = sys.SysLogAddResp
	UserDeleteResp        = sys.UserDeleteResp
	MenuDeleteResp        = sys.MenuDeleteResp
	DictAddReq            = sys.DictAddReq
	DictListData          = sys.DictListData
	SysLogListData        = sys.SysLogListData
	SysLogDeleteResp      = sys.SysLogDeleteResp
	ConfigAddResp         = sys.ConfigAddResp
	JobAddReq             = sys.JobAddReq
	MenuUpdateResp        = sys.MenuUpdateResp
	DictAddResp           = sys.DictAddResp
	DictDeleteReq         = sys.DictDeleteReq
	DeptAddResp           = sys.DeptAddResp
	LoginLogListResp      = sys.LoginLogListResp
	SysLogListReq         = sys.SysLogListReq
	ConfigListData        = sys.ConfigListData
	JobListResp           = sys.JobListResp
	JobDeleteResp         = sys.JobDeleteResp
	UserUpdateReq         = sys.UserUpdateReq
	ReSetPasswordReq      = sys.ReSetPasswordReq
	MenuListResp          = sys.MenuListResp
	UpdateMenuRoleReq     = sys.UpdateMenuRoleReq
	ConfigDeleteResp      = sys.ConfigDeleteResp
	JobDeleteReq          = sys.JobDeleteReq
	ConfigUpdateReq       = sys.ConfigUpdateReq
	LoginResp             = sys.LoginResp
	RoleAddReq            = sys.RoleAddReq
	RoleAddResp           = sys.RoleAddResp
	UpdateRoleRoleResp    = sys.UpdateRoleRoleResp
	DictListResp          = sys.DictListResp
	DeptUpdateReq         = sys.DeptUpdateReq
	ConfigAddReq          = sys.ConfigAddReq
	ConfigDeleteReq       = sys.ConfigDeleteReq
	UpdateConfigRoleResp  = sys.UpdateConfigRoleResp
	JobUpdateReq          = sys.JobUpdateReq

	Sys interface {
		Login(ctx context.Context, in *LoginReq) (*LoginResp, error)
		UserInfo(ctx context.Context, in *InfoReq) (*InfoResp, error)
		UserAdd(ctx context.Context, in *UserAddReq) (*UserAddResp, error)
		UserList(ctx context.Context, in *UserListReq) (*UserListResp, error)
		UserUpdate(ctx context.Context, in *UserUpdateReq) (*UserUpdateResp, error)
		UserDelete(ctx context.Context, in *UserDeleteReq) (*UserDeleteResp, error)
		ReSetPassword(ctx context.Context, in *ReSetPasswordReq) (*ReSetPasswordResp, error)
		UpdateUserStatus(ctx context.Context, in *UserStatusReq) (*UserStatusResp, error)
		RoleAdd(ctx context.Context, in *RoleAddReq) (*RoleAddResp, error)
		RoleList(ctx context.Context, in *RoleListReq) (*RoleListResp, error)
		RoleUpdate(ctx context.Context, in *RoleUpdateReq) (*RoleUpdateResp, error)
		RoleDelete(ctx context.Context, in *RoleDeleteReq) (*RoleDeleteResp, error)
		UpdateRoleRole(ctx context.Context, in *UpdateRoleRoleReq) (*UpdateRoleRoleResp, error)
		QueryMenuByRoleId(ctx context.Context, in *QueryMenuByRoleIdReq) (*QueryMenuByRoleIdResp, error)
		UpdateMenuRole(ctx context.Context, in *UpdateMenuRoleReq) (*UpdateMenuRoleResp, error)
		MenuAdd(ctx context.Context, in *MenuAddReq) (*MenuAddResp, error)
		MenuList(ctx context.Context, in *MenuListReq) (*MenuListResp, error)
		MenuUpdate(ctx context.Context, in *MenuUpdateReq) (*MenuUpdateResp, error)
		MenuDelete(ctx context.Context, in *MenuDeleteReq) (*MenuDeleteResp, error)
		DictAdd(ctx context.Context, in *DictAddReq) (*DictAddResp, error)
		DictList(ctx context.Context, in *DictListReq) (*DictListResp, error)
		DictUpdate(ctx context.Context, in *DictUpdateReq) (*DictUpdateResp, error)
		DictDelete(ctx context.Context, in *DictDeleteReq) (*DictDeleteResp, error)
		DeptAdd(ctx context.Context, in *DeptAddReq) (*DeptAddResp, error)
		DeptList(ctx context.Context, in *DeptListReq) (*DeptListResp, error)
		DeptUpdate(ctx context.Context, in *DeptUpdateReq) (*DeptUpdateResp, error)
		DeptDelete(ctx context.Context, in *DeptDeleteReq) (*DeptDeleteResp, error)
		LoginLogAdd(ctx context.Context, in *LoginLogAddReq) (*LoginLogAddResp, error)
		LoginLogList(ctx context.Context, in *LoginLogListReq) (*LoginLogListResp, error)
		LoginLogDelete(ctx context.Context, in *LoginLogDeleteReq) (*LoginLogDeleteResp, error)
		SysLogAdd(ctx context.Context, in *SysLogAddReq) (*SysLogAddResp, error)
		SysLogList(ctx context.Context, in *SysLogListReq) (*SysLogListResp, error)
		SysLogDelete(ctx context.Context, in *SysLogDeleteReq) (*SysLogDeleteResp, error)
		ConfigAdd(ctx context.Context, in *ConfigAddReq) (*ConfigAddResp, error)
		ConfigList(ctx context.Context, in *ConfigListReq) (*ConfigListResp, error)
		ConfigUpdate(ctx context.Context, in *ConfigUpdateReq) (*ConfigUpdateResp, error)
		ConfigDelete(ctx context.Context, in *ConfigDeleteReq) (*ConfigDeleteResp, error)
		UpdateConfigRole(ctx context.Context, in *UpdateConfigRoleReq) (*UpdateConfigRoleResp, error)
		JobAdd(ctx context.Context, in *JobAddReq) (*JobAddResp, error)
		JobList(ctx context.Context, in *JobListReq) (*JobListResp, error)
		JobUpdate(ctx context.Context, in *JobUpdateReq) (*JobUpdateResp, error)
		JobDelete(ctx context.Context, in *JobDeleteReq) (*JobDeleteResp, error)
	}

	defaultSys struct {
		cli zrpc.Client
	}
)

func NewSys(cli zrpc.Client) Sys {
	return &defaultSys{
		cli: cli,
	}
}

func (m *defaultSys) Login(ctx context.Context, in *LoginReq) (*LoginResp, error) {
	client := sys.NewSysClient(m.cli.Conn())
	return client.Login(ctx, in)
}

func (m *defaultSys) UserInfo(ctx context.Context, in *InfoReq) (*InfoResp, error) {
	client := sys.NewSysClient(m.cli.Conn())
	return client.UserInfo(ctx, in)
}

func (m *defaultSys) UserAdd(ctx context.Context, in *UserAddReq) (*UserAddResp, error) {
	client := sys.NewSysClient(m.cli.Conn())
	return client.UserAdd(ctx, in)
}

func (m *defaultSys) UserList(ctx context.Context, in *UserListReq) (*UserListResp, error) {
	client := sys.NewSysClient(m.cli.Conn())
	return client.UserList(ctx, in)
}

func (m *defaultSys) UserUpdate(ctx context.Context, in *UserUpdateReq) (*UserUpdateResp, error) {
	client := sys.NewSysClient(m.cli.Conn())
	return client.UserUpdate(ctx, in)
}

func (m *defaultSys) UserDelete(ctx context.Context, in *UserDeleteReq) (*UserDeleteResp, error) {
	client := sys.NewSysClient(m.cli.Conn())
	return client.UserDelete(ctx, in)
}

func (m *defaultSys) ReSetPassword(ctx context.Context, in *ReSetPasswordReq) (*ReSetPasswordResp, error) {
	client := sys.NewSysClient(m.cli.Conn())
	return client.ReSetPassword(ctx, in)
}

func (m *defaultSys) UpdateUserStatus(ctx context.Context, in *UserStatusReq) (*UserStatusResp, error) {
	client := sys.NewSysClient(m.cli.Conn())
	return client.UpdateUserStatus(ctx, in)
}

func (m *defaultSys) RoleAdd(ctx context.Context, in *RoleAddReq) (*RoleAddResp, error) {
	client := sys.NewSysClient(m.cli.Conn())
	return client.RoleAdd(ctx, in)
}

func (m *defaultSys) RoleList(ctx context.Context, in *RoleListReq) (*RoleListResp, error) {
	client := sys.NewSysClient(m.cli.Conn())
	return client.RoleList(ctx, in)
}

func (m *defaultSys) RoleUpdate(ctx context.Context, in *RoleUpdateReq) (*RoleUpdateResp, error) {
	client := sys.NewSysClient(m.cli.Conn())
	return client.RoleUpdate(ctx, in)
}

func (m *defaultSys) RoleDelete(ctx context.Context, in *RoleDeleteReq) (*RoleDeleteResp, error) {
	client := sys.NewSysClient(m.cli.Conn())
	return client.RoleDelete(ctx, in)
}

func (m *defaultSys) UpdateRoleRole(ctx context.Context, in *UpdateRoleRoleReq) (*UpdateRoleRoleResp, error) {
	client := sys.NewSysClient(m.cli.Conn())
	return client.UpdateRoleRole(ctx, in)
}

func (m *defaultSys) QueryMenuByRoleId(ctx context.Context, in *QueryMenuByRoleIdReq) (*QueryMenuByRoleIdResp, error) {
	client := sys.NewSysClient(m.cli.Conn())
	return client.QueryMenuByRoleId(ctx, in)
}

func (m *defaultSys) UpdateMenuRole(ctx context.Context, in *UpdateMenuRoleReq) (*UpdateMenuRoleResp, error) {
	client := sys.NewSysClient(m.cli.Conn())
	return client.UpdateMenuRole(ctx, in)
}

func (m *defaultSys) MenuAdd(ctx context.Context, in *MenuAddReq) (*MenuAddResp, error) {
	client := sys.NewSysClient(m.cli.Conn())
	return client.MenuAdd(ctx, in)
}

func (m *defaultSys) MenuList(ctx context.Context, in *MenuListReq) (*MenuListResp, error) {
	client := sys.NewSysClient(m.cli.Conn())
	return client.MenuList(ctx, in)
}

func (m *defaultSys) MenuUpdate(ctx context.Context, in *MenuUpdateReq) (*MenuUpdateResp, error) {
	client := sys.NewSysClient(m.cli.Conn())
	return client.MenuUpdate(ctx, in)
}

func (m *defaultSys) MenuDelete(ctx context.Context, in *MenuDeleteReq) (*MenuDeleteResp, error) {
	client := sys.NewSysClient(m.cli.Conn())
	return client.MenuDelete(ctx, in)
}

func (m *defaultSys) DictAdd(ctx context.Context, in *DictAddReq) (*DictAddResp, error) {
	client := sys.NewSysClient(m.cli.Conn())
	return client.DictAdd(ctx, in)
}

func (m *defaultSys) DictList(ctx context.Context, in *DictListReq) (*DictListResp, error) {
	client := sys.NewSysClient(m.cli.Conn())
	return client.DictList(ctx, in)
}

func (m *defaultSys) DictUpdate(ctx context.Context, in *DictUpdateReq) (*DictUpdateResp, error) {
	client := sys.NewSysClient(m.cli.Conn())
	return client.DictUpdate(ctx, in)
}

func (m *defaultSys) DictDelete(ctx context.Context, in *DictDeleteReq) (*DictDeleteResp, error) {
	client := sys.NewSysClient(m.cli.Conn())
	return client.DictDelete(ctx, in)
}

func (m *defaultSys) DeptAdd(ctx context.Context, in *DeptAddReq) (*DeptAddResp, error) {
	client := sys.NewSysClient(m.cli.Conn())
	return client.DeptAdd(ctx, in)
}

func (m *defaultSys) DeptList(ctx context.Context, in *DeptListReq) (*DeptListResp, error) {
	client := sys.NewSysClient(m.cli.Conn())
	return client.DeptList(ctx, in)
}

func (m *defaultSys) DeptUpdate(ctx context.Context, in *DeptUpdateReq) (*DeptUpdateResp, error) {
	client := sys.NewSysClient(m.cli.Conn())
	return client.DeptUpdate(ctx, in)
}

func (m *defaultSys) DeptDelete(ctx context.Context, in *DeptDeleteReq) (*DeptDeleteResp, error) {
	client := sys.NewSysClient(m.cli.Conn())
	return client.DeptDelete(ctx, in)
}

func (m *defaultSys) LoginLogAdd(ctx context.Context, in *LoginLogAddReq) (*LoginLogAddResp, error) {
	client := sys.NewSysClient(m.cli.Conn())
	return client.LoginLogAdd(ctx, in)
}

func (m *defaultSys) LoginLogList(ctx context.Context, in *LoginLogListReq) (*LoginLogListResp, error) {
	client := sys.NewSysClient(m.cli.Conn())
	return client.LoginLogList(ctx, in)
}

func (m *defaultSys) LoginLogDelete(ctx context.Context, in *LoginLogDeleteReq) (*LoginLogDeleteResp, error) {
	client := sys.NewSysClient(m.cli.Conn())
	return client.LoginLogDelete(ctx, in)
}

func (m *defaultSys) SysLogAdd(ctx context.Context, in *SysLogAddReq) (*SysLogAddResp, error) {
	client := sys.NewSysClient(m.cli.Conn())
	return client.SysLogAdd(ctx, in)
}

func (m *defaultSys) SysLogList(ctx context.Context, in *SysLogListReq) (*SysLogListResp, error) {
	client := sys.NewSysClient(m.cli.Conn())
	return client.SysLogList(ctx, in)
}

func (m *defaultSys) SysLogDelete(ctx context.Context, in *SysLogDeleteReq) (*SysLogDeleteResp, error) {
	client := sys.NewSysClient(m.cli.Conn())
	return client.SysLogDelete(ctx, in)
}

func (m *defaultSys) ConfigAdd(ctx context.Context, in *ConfigAddReq) (*ConfigAddResp, error) {
	client := sys.NewSysClient(m.cli.Conn())
	return client.ConfigAdd(ctx, in)
}

func (m *defaultSys) ConfigList(ctx context.Context, in *ConfigListReq) (*ConfigListResp, error) {
	client := sys.NewSysClient(m.cli.Conn())
	return client.ConfigList(ctx, in)
}

func (m *defaultSys) ConfigUpdate(ctx context.Context, in *ConfigUpdateReq) (*ConfigUpdateResp, error) {
	client := sys.NewSysClient(m.cli.Conn())
	return client.ConfigUpdate(ctx, in)
}

func (m *defaultSys) ConfigDelete(ctx context.Context, in *ConfigDeleteReq) (*ConfigDeleteResp, error) {
	client := sys.NewSysClient(m.cli.Conn())
	return client.ConfigDelete(ctx, in)
}

func (m *defaultSys) UpdateConfigRole(ctx context.Context, in *UpdateConfigRoleReq) (*UpdateConfigRoleResp, error) {
	client := sys.NewSysClient(m.cli.Conn())
	return client.UpdateConfigRole(ctx, in)
}

func (m *defaultSys) JobAdd(ctx context.Context, in *JobAddReq) (*JobAddResp, error) {
	client := sys.NewSysClient(m.cli.Conn())
	return client.JobAdd(ctx, in)
}

func (m *defaultSys) JobList(ctx context.Context, in *JobListReq) (*JobListResp, error) {
	client := sys.NewSysClient(m.cli.Conn())
	return client.JobList(ctx, in)
}

func (m *defaultSys) JobUpdate(ctx context.Context, in *JobUpdateReq) (*JobUpdateResp, error) {
	client := sys.NewSysClient(m.cli.Conn())
	return client.JobUpdate(ctx, in)
}

func (m *defaultSys) JobDelete(ctx context.Context, in *JobDeleteReq) (*JobDeleteResp, error) {
	client := sys.NewSysClient(m.cli.Conn())
	return client.JobDelete(ctx, in)
}
