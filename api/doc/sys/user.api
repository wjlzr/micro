info(
    title: "micro"
    desc: "micro"
    author: "weijialei"
    email: "weijialei@wikiglobal.com"
)

type (
    loginReq struct {
        UserName string `json:"userName"`
        Password string `json:"password"`
    }
    loginResp struct {
        Code string `json:"code"`
        Message string `json:"message"`
        Status string `json:"status"`
        CurrentAuthority string `json:"currentAuthority"`
        Id int64 `json:"id"`
        UserName string `json:"userName"`
        AccessToken string `json:"token"`
        AccessExpire int64 `json:"accessExpire"`
        RefreshAfter int64 `json:"refreshAfter"`
    }

    ListMenuTree struct {
        Id int64 `json:"id"`                               // 编号
        Path string `json:"path"`                          // 菜单路径
        Name string `json:"name"`                          // 菜单名称
        ParentId int64 `json:"parentId"`                  // 父菜单ID，一级菜单为0
        Icon string `json:"icon"`                          // 菜单图标
    }

    ListMenuTreeVue struct {
        Id int64 `json:"id"`
        ParentId int64 `json:"parentId"`
        Title string `json:"title"`
        Path string `json:"path"`
        Name string `json:"name"`
        Icon string `json:"icon"`
        VueRedirect string `json:"redirect"`
        VueComponent string `json:"component"`
        Meta MenuTreeMeta `json:"meta"`
    }

    MenuTreeMeta struct {
        Title string `json:"title"`
        Icon string `json:"icon"`
    }

    userInfoResp struct {
        Code string `json:"code"`
        Message string `json:"message"`
        Avatar string `json:"avatar"`
        Name string `json:"name"`
        MenuTree []*ListMenuTree `json:"menuTree"`
        menuTreeVue []*ListMenuTreeVue `json:"menuTreeVue"`
    }
    addUserReq struct {
        Email string `json:"email"`
        Mobile string `json:"mobile"`
        Name string `json:"name"`
        NickName string `json:"nickName"`
        DeptId int64 `json:"deptId"`
        RoleId int64 `json:"roleId"`
        JobId int64 `json:"jobId"`
    }
    addUserResp struct {
        Code string `json:"code"`
        Message string `json:"message"`
    }

    ListUserReq struct {
        Current int64 `json:"current,default=1"`
        PageSize int64 `json:"pageSize,default=20"`
        Name string `json:"name,optional"`
        NickName string `json:"nickName,optional"`
        Mobile string `json:"mobile,optional"`
        Email string `json:"email,optional"`
        Status int64 `json:"status,optional"`
        DeptId int64 `json:"deptId,optional"`
        JobId int64 `json:"deptId,optional"`
    }

    ListUserData struct {
        Id int64 `json:"id"`                               // 编号
        Name string `json:"name"`                          // 用户名
        NickName string `json:"nickName"`                 // 昵称
        Avatar string `json:"avatar"`                      // 头像
        Password string `json:"password"`                  // 密码
        Salt string `json:"salt"`                          // 加密盐
        Email string `json:"email"`                        // 邮箱
        Mobile string `json:"mobile"`                      // 手机号
        Status int64 `json:"status"`                       // 状态  0：禁用   1：正常
        DeptId int64 `json:"deptId"`                      // 机构ID
        CreateBy string `json:"createBy"`                 // 创建人
        CreateTime string `json:"createTime"`             // 创建时间
        LastUpdateBy string `json:"lastUpdateBy"`        // 更新人
        LastUpdateTime string `json:"lastUpdateTime"`    // 更新时间
        DelFlag int64 `json:"delFlag"`                    // 是否删除  -1：已删除  0：正常
        JobId int64 `json:"jobId"`
        RoleId int64 `json:"roleId"`
        RoleName string `json:"roleName"`
        JobName string `json:"jobName"`
        deptName string `json:"deptName"`
    }
    ListUserResp struct {
        Code string `json:"code"`
        Message string `json:"message"`
        Current int64 `json:"current,default=1"`
        Data []*ListUserData `json:"data"`
        PageSize int64 `json:"pageSize,default=20"`
        Success bool `json:"success"`
        Total int64 `json:"total"`
    }
    UpdateUserReq struct {
        Id int64 `json:"id"`
        Email string `json:"email"`
        Mobile string `json:"mobile"`
        Name string `json:"name"`
        NickName string `json:"nickName"`
        DeptId int64 `json:"deptId"`
        RoleId int64 `json:"roleId"`
        status int64 `json:"status"`
        JobId int64 `json:"jobId"`
    }
    UpdateUserResp struct {
        Code string `json:"code"`
        Message string `json:"message"`
    }
    DeleteUserReq struct {
        Id int64 `json:"id"`
    }
    DeleteUserResp struct {
        Code string `json:"code"`
        Message string `json:"message"`
    }
    ReSetPasswordReq struct {
        Id int64 `json:"id"`
    }
    ReSetPasswordResp struct {
        Code string `json:"code"`
        Message string `json:"message"`
    }
    UserStatusReq struct {
        Id int64 `json:"id"`
        Status int64 `json:"status"`                       // 状态  0：禁用   1：正常
    }
    UserStatusResp struct {
        Code string `json:"code"`
        Message string `json:"message"`
    }

    RoleAllResp struct {
        Id int64 `json:"id"`
        Name string `json:"name"`
        Remark string `json:"remark"`
    }

    DeptAllResp struct {
        Id int64 `json:"id"`
        Value string `json:"value"`
        Title string `json:"title"`
        ParentId int64 `json:"parentId"`
    }

    JobAllResp struct {
        Id int64 `json:"id"`
        JobName string `json:"jobName"`
    }

    SelectDataReq struct {
        Current int64 `json:"current,default=1"`
        PageSize int64 `json:"pageSize,default=20"`
    }

    SelectDataResp struct {
        Code string `json:"code"`
        Message string `json:"message"`
        RoleAll []*RoleAllResp `json:"roleAll"`
        DeptAll []*DeptAllResp `json:"deptAll"`
        JobAll []*JobAllResp `json:"jobAll"`
    }
)


@server(
    jwt: Auth
    middleware: CheckUrl
    group: sys/user
)
service admin-api {

    @handler UserInfo
    get /api/sys/user/currentUser () returns (userInfoResp)

    @handler UserAdd
    post /api/sys/user/add (addUserReq) returns (addUserResp)

    @handler UserList
    post /api/sys/user/list (ListUserReq) returns (ListUserResp)

    @handler UserUpdate
    post /api/sys/user/update (UpdateUserReq) returns (UpdateUserResp)

    @handler UserDelete
    post /api/sys/user/delete (DeleteUserReq) returns (DeleteUserResp)

    @handler ReSetPassword
    post /api/sys/user/reSetPassword (ReSetPasswordReq) returns (ReSetPasswordResp)

    @handler UpdateUserStatus
    post /api/sys/user/UpdateUserStatus (UserStatusReq) returns (UserStatusResp)

    @handler SelectAllData
    post /api/sys/user/selectAllData (SelectDataReq) returns (SelectDataResp)
}

@server(
    group: sys/user
)
service admin-api {
    @handler UserLogin
    post /api/sys/user/login (loginReq) returns (loginResp)
}